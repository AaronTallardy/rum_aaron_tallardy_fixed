<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="662" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="645.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="645.00"> </text><svg id="frames" x="10" width="1180" total_samples="11338"><g><title>perf-exec (7 samples, 0.06%)</title><rect x="0.0000%" y="597" width="0.0617%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="7"/><text x="0.2500%" y="607.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="0.0000%" y="581" width="0.0617%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="7"/><text x="0.2500%" y="591.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="0.0000%" y="565" width="0.0617%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="7"/><text x="0.2500%" y="575.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="0.0000%" y="549" width="0.0617%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="7"/><text x="0.2500%" y="559.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="0.0000%" y="533" width="0.0617%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="7"/><text x="0.2500%" y="543.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="0.0000%" y="517" width="0.0617%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="7"/><text x="0.2500%" y="527.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="0.0000%" y="501" width="0.0617%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="7"/><text x="0.2500%" y="511.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="0.0000%" y="485" width="0.0617%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="7"/><text x="0.2500%" y="495.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="0.0000%" y="469" width="0.0617%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="7"/><text x="0.2500%" y="479.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="0.0000%" y="453" width="0.0617%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="7"/><text x="0.2500%" y="463.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="0.0000%" y="437" width="0.0617%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="7"/><text x="0.2500%" y="447.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="0.0000%" y="421" width="0.0617%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="7"/><text x="0.2500%" y="431.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="0.0000%" y="405" width="0.0617%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="7"/><text x="0.2500%" y="415.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="0.0617%" y="565" width="0.0706%" height="15" fill="rgb(206,188,39)" fg:x="7" fg:w="8"/><text x="0.3117%" y="575.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="0.0617%" y="549" width="0.0706%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="8"/><text x="0.3117%" y="559.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="0.0617%" y="533" width="0.0706%" height="15" fill="rgb(231,73,38)" fg:x="7" fg:w="8"/><text x="0.3117%" y="543.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="0.0617%" y="517" width="0.0706%" height="15" fill="rgb(225,20,46)" fg:x="7" fg:w="8"/><text x="0.3117%" y="527.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="0.0617%" y="501" width="0.0706%" height="15" fill="rgb(210,31,41)" fg:x="7" fg:w="8"/><text x="0.3117%" y="511.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="0.0617%" y="485" width="0.0706%" height="15" fill="rgb(221,200,47)" fg:x="7" fg:w="8"/><text x="0.3117%" y="495.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="0.0617%" y="469" width="0.0706%" height="15" fill="rgb(226,26,5)" fg:x="7" fg:w="8"/><text x="0.3117%" y="479.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="0.0617%" y="453" width="0.0706%" height="15" fill="rgb(249,33,26)" fg:x="7" fg:w="8"/><text x="0.3117%" y="463.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="0.0617%" y="437" width="0.0706%" height="15" fill="rgb(235,183,28)" fg:x="7" fg:w="8"/><text x="0.3117%" y="447.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="0.0617%" y="421" width="0.0706%" height="15" fill="rgb(221,5,38)" fg:x="7" fg:w="8"/><text x="0.3117%" y="431.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="0.0617%" y="405" width="0.0706%" height="15" fill="rgb(247,18,42)" fg:x="7" fg:w="8"/><text x="0.3117%" y="415.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="0.0617%" y="389" width="0.0706%" height="15" fill="rgb(241,131,45)" fg:x="7" fg:w="8"/><text x="0.3117%" y="399.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="0.0706%" y="373" width="0.0617%" height="15" fill="rgb(249,31,29)" fg:x="8" fg:w="7"/><text x="0.3206%" y="383.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="0.0706%" y="357" width="0.0617%" height="15" fill="rgb(225,111,53)" fg:x="8" fg:w="7"/><text x="0.3206%" y="367.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="0.0706%" y="341" width="0.0617%" height="15" fill="rgb(238,160,17)" fg:x="8" fg:w="7"/><text x="0.3206%" y="351.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="0.0706%" y="325" width="0.0617%" height="15" fill="rgb(214,148,48)" fg:x="8" fg:w="7"/><text x="0.3206%" y="335.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="0.0706%" y="309" width="0.0617%" height="15" fill="rgb(232,36,49)" fg:x="8" fg:w="7"/><text x="0.3206%" y="319.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="0.0706%" y="293" width="0.0617%" height="15" fill="rgb(209,103,24)" fg:x="8" fg:w="7"/><text x="0.3206%" y="303.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="0.0706%" y="277" width="0.0617%" height="15" fill="rgb(229,88,8)" fg:x="8" fg:w="7"/><text x="0.3206%" y="287.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="0.0706%" y="261" width="0.0617%" height="15" fill="rgb(213,181,19)" fg:x="8" fg:w="7"/><text x="0.3206%" y="271.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="0.0706%" y="245" width="0.0617%" height="15" fill="rgb(254,191,54)" fg:x="8" fg:w="7"/><text x="0.3206%" y="255.50"></text></g><g><title>[unknown] (9 samples, 0.08%)</title><rect x="0.0617%" y="581" width="0.0794%" height="15" fill="rgb(241,83,37)" fg:x="7" fg:w="9"/><text x="0.3117%" y="591.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="17.1194%" y="261" width="0.0706%" height="15" fill="rgb(233,36,39)" fg:x="1941" fg:w="8"/><text x="17.3694%" y="271.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="17.1194%" y="245" width="0.0706%" height="15" fill="rgb(226,3,54)" fg:x="1941" fg:w="8"/><text x="17.3694%" y="255.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="17.1194%" y="229" width="0.0706%" height="15" fill="rgb(245,192,40)" fg:x="1941" fg:w="8"/><text x="17.3694%" y="239.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="17.1194%" y="213" width="0.0706%" height="15" fill="rgb(238,167,29)" fg:x="1941" fg:w="8"/><text x="17.3694%" y="223.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="17.1194%" y="197" width="0.0706%" height="15" fill="rgb(232,182,51)" fg:x="1941" fg:w="8"/><text x="17.3694%" y="207.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="17.1194%" y="181" width="0.0706%" height="15" fill="rgb(231,60,39)" fg:x="1941" fg:w="8"/><text x="17.3694%" y="191.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="17.1194%" y="165" width="0.0706%" height="15" fill="rgb(208,69,12)" fg:x="1941" fg:w="8"/><text x="17.3694%" y="175.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="17.1194%" y="149" width="0.0706%" height="15" fill="rgb(235,93,37)" fg:x="1941" fg:w="8"/><text x="17.3694%" y="159.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="17.1194%" y="133" width="0.0706%" height="15" fill="rgb(213,116,39)" fg:x="1941" fg:w="8"/><text x="17.3694%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (113 samples, 1.00%)</title><rect x="17.2694%" y="245" width="0.9966%" height="15" fill="rgb(222,207,29)" fg:x="1958" fg:w="113"/><text x="17.5194%" y="255.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (38 samples, 0.34%)</title><rect x="17.9309%" y="229" width="0.3352%" height="15" fill="rgb(206,96,30)" fg:x="2033" fg:w="38"/><text x="18.1809%" y="239.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (13 samples, 0.11%)</title><rect x="18.1513%" y="213" width="0.1147%" height="15" fill="rgb(218,138,4)" fg:x="2058" fg:w="13"/><text x="18.4013%" y="223.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="21.6176%" y="229" width="0.0706%" height="15" fill="rgb(250,191,14)" fg:x="2451" fg:w="8"/><text x="21.8676%" y="239.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="21.6176%" y="213" width="0.0706%" height="15" fill="rgb(239,60,40)" fg:x="2451" fg:w="8"/><text x="21.8676%" y="223.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="21.6176%" y="197" width="0.0706%" height="15" fill="rgb(206,27,48)" fg:x="2451" fg:w="8"/><text x="21.8676%" y="207.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="21.6176%" y="181" width="0.0706%" height="15" fill="rgb(225,35,8)" fg:x="2451" fg:w="8"/><text x="21.8676%" y="191.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="21.6176%" y="165" width="0.0706%" height="15" fill="rgb(250,213,24)" fg:x="2451" fg:w="8"/><text x="21.8676%" y="175.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="21.6176%" y="149" width="0.0706%" height="15" fill="rgb(247,123,22)" fg:x="2451" fg:w="8"/><text x="21.8676%" y="159.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="21.6176%" y="133" width="0.0706%" height="15" fill="rgb(231,138,38)" fg:x="2451" fg:w="8"/><text x="21.8676%" y="143.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="21.6176%" y="117" width="0.0706%" height="15" fill="rgb(231,145,46)" fg:x="2451" fg:w="8"/><text x="21.8676%" y="127.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="21.6705%" y="101" width="0.0176%" height="15" fill="rgb(251,118,11)" fg:x="2457" fg:w="2"/><text x="21.9205%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (512 samples, 4.52%)</title><rect x="17.1900%" y="261" width="4.5158%" height="15" fill="rgb(217,147,25)" fg:x="1949" fg:w="512"/><text x="17.4400%" y="271.50">alloc..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (390 samples, 3.44%)</title><rect x="18.2660%" y="245" width="3.4398%" height="15" fill="rgb(247,81,37)" fg:x="2071" fg:w="390"/><text x="18.5160%" y="255.50">cor..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (2 samples, 0.02%)</title><rect x="21.6881%" y="229" width="0.0176%" height="15" fill="rgb(209,12,38)" fg:x="2459" fg:w="2"/><text x="21.9381%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (2 samples, 0.02%)</title><rect x="21.6881%" y="213" width="0.0176%" height="15" fill="rgb(227,1,9)" fg:x="2459" fg:w="2"/><text x="21.9381%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,344 samples, 11.85%)</title><rect x="15.8141%" y="277" width="11.8539%" height="15" fill="rgb(248,47,43)" fg:x="1793" fg:w="1344"/><text x="16.0641%" y="287.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>core::slice::raw::from_raw_parts (676 samples, 5.96%)</title><rect x="21.7058%" y="261" width="5.9623%" height="15" fill="rgb(221,10,30)" fg:x="2461" fg:w="676"/><text x="21.9558%" y="271.50">core::sl..</text></g><g><title>core::ptr::slice_from_raw_parts (676 samples, 5.96%)</title><rect x="21.7058%" y="245" width="5.9623%" height="15" fill="rgb(210,229,1)" fg:x="2461" fg:w="676"/><text x="21.9558%" y="255.50">core::pt..</text></g><g><title>core::ptr::metadata::from_raw_parts (676 samples, 5.96%)</title><rect x="21.7058%" y="229" width="5.9623%" height="15" fill="rgb(222,148,37)" fg:x="2461" fg:w="676"/><text x="21.9558%" y="239.50">core::pt..</text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="27.6680%" y="277" width="0.0265%" height="15" fill="rgb(234,67,33)" fg:x="3137" fg:w="3"/><text x="27.9180%" y="287.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="27.6680%" y="261" width="0.0265%" height="15" fill="rgb(247,98,35)" fg:x="3137" fg:w="3"/><text x="27.9180%" y="271.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="27.6680%" y="245" width="0.0265%" height="15" fill="rgb(247,138,52)" fg:x="3137" fg:w="3"/><text x="27.9180%" y="255.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="27.6680%" y="229" width="0.0265%" height="15" fill="rgb(213,79,30)" fg:x="3137" fg:w="3"/><text x="27.9180%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="27.6680%" y="213" width="0.0265%" height="15" fill="rgb(246,177,23)" fg:x="3137" fg:w="3"/><text x="27.9180%" y="223.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="27.6680%" y="197" width="0.0265%" height="15" fill="rgb(230,62,27)" fg:x="3137" fg:w="3"/><text x="27.9180%" y="207.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="27.6680%" y="181" width="0.0265%" height="15" fill="rgb(216,154,8)" fg:x="3137" fg:w="3"/><text x="27.9180%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.6768%" y="165" width="0.0176%" height="15" fill="rgb(244,35,45)" fg:x="3138" fg:w="2"/><text x="27.9268%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.6768%" y="149" width="0.0176%" height="15" fill="rgb(251,115,12)" fg:x="3138" fg:w="2"/><text x="27.9268%" y="159.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.6768%" y="133" width="0.0176%" height="15" fill="rgb(240,54,50)" fg:x="3138" fg:w="2"/><text x="27.9268%" y="143.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.6768%" y="117" width="0.0176%" height="15" fill="rgb(233,84,52)" fg:x="3138" fg:w="2"/><text x="27.9268%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2,922 samples, 25.77%)</title><rect x="5.9005%" y="293" width="25.7717%" height="15" fill="rgb(207,117,47)" fg:x="669" fg:w="2922"/><text x="6.1505%" y="303.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (451 samples, 3.98%)</title><rect x="27.6945%" y="277" width="3.9778%" height="15" fill="rgb(249,43,39)" fg:x="3140" fg:w="451"/><text x="27.9445%" y="287.50">core..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (437 samples, 3.85%)</title><rect x="27.8180%" y="261" width="3.8543%" height="15" fill="rgb(209,38,44)" fg:x="3154" fg:w="437"/><text x="28.0680%" y="271.50">&lt;usi..</text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="31.6723%" y="293" width="0.0176%" height="15" fill="rgb(236,212,23)" fg:x="3591" fg:w="2"/><text x="31.9223%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="31.6723%" y="277" width="0.0176%" height="15" fill="rgb(242,79,21)" fg:x="3591" fg:w="2"/><text x="31.9223%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="31.6723%" y="261" width="0.0176%" height="15" fill="rgb(211,96,35)" fg:x="3591" fg:w="2"/><text x="31.9223%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="31.6723%" y="245" width="0.0176%" height="15" fill="rgb(253,215,40)" fg:x="3591" fg:w="2"/><text x="31.9223%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="31.6723%" y="229" width="0.0176%" height="15" fill="rgb(211,81,21)" fg:x="3591" fg:w="2"/><text x="31.9223%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="41.2507%" y="277" width="0.0176%" height="15" fill="rgb(208,190,38)" fg:x="4677" fg:w="2"/><text x="41.5007%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="41.2507%" y="261" width="0.0176%" height="15" fill="rgb(235,213,38)" fg:x="4677" fg:w="2"/><text x="41.5007%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="41.2507%" y="245" width="0.0176%" height="15" fill="rgb(237,122,38)" fg:x="4677" fg:w="2"/><text x="41.5007%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="41.2507%" y="229" width="0.0176%" height="15" fill="rgb(244,218,35)" fg:x="4677" fg:w="2"/><text x="41.5007%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="41.2507%" y="213" width="0.0176%" height="15" fill="rgb(240,68,47)" fg:x="4677" fg:w="2"/><text x="41.5007%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="41.2507%" y="197" width="0.0176%" height="15" fill="rgb(210,16,53)" fg:x="4677" fg:w="2"/><text x="41.5007%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="41.2507%" y="181" width="0.0176%" height="15" fill="rgb(235,124,12)" fg:x="4677" fg:w="2"/><text x="41.5007%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="41.2507%" y="165" width="0.0176%" height="15" fill="rgb(224,169,11)" fg:x="4677" fg:w="2"/><text x="41.5007%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="41.2507%" y="149" width="0.0176%" height="15" fill="rgb(250,166,2)" fg:x="4677" fg:w="2"/><text x="41.5007%" y="159.50"></text></g><g><title>rum::execute::Um::get (2,001 samples, 17.65%)</title><rect x="41.2683%" y="277" width="17.6486%" height="15" fill="rgb(242,216,29)" fg:x="4679" fg:w="2001"/><text x="41.5183%" y="287.50">rum::execute::Um::get</text></g><g><title>rum::execute::Um::mask (1,389 samples, 12.25%)</title><rect x="46.6661%" y="261" width="12.2508%" height="15" fill="rgb(230,116,27)" fg:x="5291" fg:w="1389"/><text x="46.9161%" y="271.50">rum::execute::Um::..</text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="58.8728%" y="245" width="0.0441%" height="15" fill="rgb(228,99,48)" fg:x="6675" fg:w="5"/><text x="59.1228%" y="255.50"></text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="58.8728%" y="229" width="0.0441%" height="15" fill="rgb(253,11,6)" fg:x="6675" fg:w="5"/><text x="59.1228%" y="239.50"></text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="58.8728%" y="213" width="0.0441%" height="15" fill="rgb(247,143,39)" fg:x="6675" fg:w="5"/><text x="59.1228%" y="223.50"></text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="58.8728%" y="197" width="0.0441%" height="15" fill="rgb(236,97,10)" fg:x="6675" fg:w="5"/><text x="59.1228%" y="207.50"></text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="58.8728%" y="181" width="0.0441%" height="15" fill="rgb(233,208,19)" fg:x="6675" fg:w="5"/><text x="59.1228%" y="191.50"></text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="58.8728%" y="165" width="0.0441%" height="15" fill="rgb(216,164,2)" fg:x="6675" fg:w="5"/><text x="59.1228%" y="175.50"></text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="58.8728%" y="149" width="0.0441%" height="15" fill="rgb(220,129,5)" fg:x="6675" fg:w="5"/><text x="59.1228%" y="159.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="58.8993%" y="133" width="0.0176%" height="15" fill="rgb(242,17,10)" fg:x="6678" fg:w="2"/><text x="59.1493%" y="143.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="58.8993%" y="117" width="0.0176%" height="15" fill="rgb(242,107,0)" fg:x="6678" fg:w="2"/><text x="59.1493%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (4 samples, 0.04%)</title><rect x="59.6401%" y="229" width="0.0353%" height="15" fill="rgb(251,28,31)" fg:x="6762" fg:w="4"/><text x="59.8901%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (3 samples, 0.03%)</title><rect x="59.6490%" y="213" width="0.0265%" height="15" fill="rgb(233,223,10)" fg:x="6763" fg:w="3"/><text x="59.8990%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (37 samples, 0.33%)</title><rect x="59.5872%" y="245" width="0.3263%" height="15" fill="rgb(215,21,27)" fg:x="6756" fg:w="37"/><text x="59.8372%" y="255.50"></text></g><g><title>core::slice::raw::from_raw_parts (27 samples, 0.24%)</title><rect x="59.6754%" y="229" width="0.2381%" height="15" fill="rgb(232,23,21)" fg:x="6766" fg:w="27"/><text x="59.9254%" y="239.50"></text></g><g><title>core::ptr::slice_from_raw_parts (27 samples, 0.24%)</title><rect x="59.6754%" y="213" width="0.2381%" height="15" fill="rgb(244,5,23)" fg:x="6766" fg:w="27"/><text x="59.9254%" y="223.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (26 samples, 0.23%)</title><rect x="59.6842%" y="197" width="0.2293%" height="15" fill="rgb(226,81,46)" fg:x="6767" fg:w="26"/><text x="59.9342%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (106 samples, 0.93%)</title><rect x="59.1286%" y="261" width="0.9349%" height="15" fill="rgb(247,70,30)" fg:x="6704" fg:w="106"/><text x="59.3786%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (17 samples, 0.15%)</title><rect x="59.9136%" y="245" width="0.1499%" height="15" fill="rgb(212,68,19)" fg:x="6793" fg:w="17"/><text x="60.1636%" y="255.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (15 samples, 0.13%)</title><rect x="59.9312%" y="229" width="0.1323%" height="15" fill="rgb(240,187,13)" fg:x="6795" fg:w="15"/><text x="60.1812%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (16 samples, 0.14%)</title><rect x="60.2487%" y="245" width="0.1411%" height="15" fill="rgb(223,113,26)" fg:x="6831" fg:w="16"/><text x="60.4987%" y="255.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (11 samples, 0.10%)</title><rect x="60.2928%" y="229" width="0.0970%" height="15" fill="rgb(206,192,2)" fg:x="6836" fg:w="11"/><text x="60.5428%" y="239.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (11 samples, 0.10%)</title><rect x="60.2928%" y="213" width="0.0970%" height="15" fill="rgb(241,108,4)" fg:x="6836" fg:w="11"/><text x="60.5428%" y="223.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (11 samples, 0.10%)</title><rect x="60.2928%" y="197" width="0.0970%" height="15" fill="rgb(247,173,49)" fg:x="6836" fg:w="11"/><text x="60.5428%" y="207.50"></text></g><g><title>rum::functions::add (168 samples, 1.48%)</title><rect x="58.9169%" y="277" width="1.4817%" height="15" fill="rgb(224,114,35)" fg:x="6680" fg:w="168"/><text x="59.1669%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (38 samples, 0.34%)</title><rect x="60.0635%" y="261" width="0.3352%" height="15" fill="rgb(245,159,27)" fg:x="6810" fg:w="38"/><text x="60.3135%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.02%)</title><rect x="61.2630%" y="213" width="0.0176%" height="15" fill="rgb(245,172,44)" fg:x="6946" fg:w="2"/><text x="61.5130%" y="223.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (2 samples, 0.02%)</title><rect x="61.2630%" y="197" width="0.0176%" height="15" fill="rgb(236,23,11)" fg:x="6946" fg:w="2"/><text x="61.5130%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (7 samples, 0.06%)</title><rect x="61.2630%" y="229" width="0.0617%" height="15" fill="rgb(205,117,38)" fg:x="6946" fg:w="7"/><text x="61.5130%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (5 samples, 0.04%)</title><rect x="61.2806%" y="213" width="0.0441%" height="15" fill="rgb(237,72,25)" fg:x="6948" fg:w="5"/><text x="61.5306%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (46 samples, 0.41%)</title><rect x="61.1925%" y="245" width="0.4057%" height="15" fill="rgb(244,70,9)" fg:x="6938" fg:w="46"/><text x="61.4425%" y="255.50"></text></g><g><title>core::slice::raw::from_raw_parts (31 samples, 0.27%)</title><rect x="61.3247%" y="229" width="0.2734%" height="15" fill="rgb(217,125,39)" fg:x="6953" fg:w="31"/><text x="61.5747%" y="239.50"></text></g><g><title>core::ptr::slice_from_raw_parts (31 samples, 0.27%)</title><rect x="61.3247%" y="213" width="0.2734%" height="15" fill="rgb(235,36,10)" fg:x="6953" fg:w="31"/><text x="61.5747%" y="223.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (31 samples, 0.27%)</title><rect x="61.3247%" y="197" width="0.2734%" height="15" fill="rgb(251,123,47)" fg:x="6953" fg:w="31"/><text x="61.5747%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (123 samples, 1.08%)</title><rect x="60.6368%" y="261" width="1.0848%" height="15" fill="rgb(221,13,13)" fg:x="6875" fg:w="123"/><text x="60.8868%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (14 samples, 0.12%)</title><rect x="61.5982%" y="245" width="0.1235%" height="15" fill="rgb(238,131,9)" fg:x="6984" fg:w="14"/><text x="61.8482%" y="255.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (14 samples, 0.12%)</title><rect x="61.5982%" y="229" width="0.1235%" height="15" fill="rgb(211,50,8)" fg:x="6984" fg:w="14"/><text x="61.8482%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (17 samples, 0.15%)</title><rect x="61.9862%" y="245" width="0.1499%" height="15" fill="rgb(245,182,24)" fg:x="7028" fg:w="17"/><text x="62.2362%" y="255.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (12 samples, 0.11%)</title><rect x="62.0303%" y="229" width="0.1058%" height="15" fill="rgb(242,14,37)" fg:x="7033" fg:w="12"/><text x="62.2803%" y="239.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (12 samples, 0.11%)</title><rect x="62.0303%" y="213" width="0.1058%" height="15" fill="rgb(246,228,12)" fg:x="7033" fg:w="12"/><text x="62.2803%" y="223.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (12 samples, 0.11%)</title><rect x="62.0303%" y="197" width="0.1058%" height="15" fill="rgb(213,55,15)" fg:x="7033" fg:w="12"/><text x="62.2803%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (58 samples, 0.51%)</title><rect x="61.7216%" y="261" width="0.5116%" height="15" fill="rgb(209,9,3)" fg:x="6998" fg:w="58"/><text x="61.9716%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (11 samples, 0.10%)</title><rect x="62.1362%" y="245" width="0.0970%" height="15" fill="rgb(230,59,30)" fg:x="7045" fg:w="11"/><text x="62.3862%" y="255.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (11 samples, 0.10%)</title><rect x="62.1362%" y="229" width="0.0970%" height="15" fill="rgb(209,121,21)" fg:x="7045" fg:w="11"/><text x="62.3862%" y="239.50"></text></g><g><title>rum::functions::bit_nand (209 samples, 1.84%)</title><rect x="60.3987%" y="277" width="1.8434%" height="15" fill="rgb(220,109,13)" fg:x="6848" fg:w="209"/><text x="60.6487%" y="287.50">r..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.02%)</title><rect x="62.8418%" y="213" width="0.0176%" height="15" fill="rgb(232,18,1)" fg:x="7125" fg:w="2"/><text x="63.0918%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (8 samples, 0.07%)</title><rect x="62.8418%" y="229" width="0.0706%" height="15" fill="rgb(215,41,42)" fg:x="7125" fg:w="8"/><text x="63.0918%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (6 samples, 0.05%)</title><rect x="62.8594%" y="213" width="0.0529%" height="15" fill="rgb(224,123,36)" fg:x="7127" fg:w="6"/><text x="63.1094%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (28 samples, 0.25%)</title><rect x="62.7977%" y="245" width="0.2470%" height="15" fill="rgb(240,125,3)" fg:x="7120" fg:w="28"/><text x="63.0477%" y="255.50"></text></g><g><title>core::slice::raw::from_raw_parts (15 samples, 0.13%)</title><rect x="62.9123%" y="229" width="0.1323%" height="15" fill="rgb(205,98,50)" fg:x="7133" fg:w="15"/><text x="63.1623%" y="239.50"></text></g><g><title>core::ptr::slice_from_raw_parts (15 samples, 0.13%)</title><rect x="62.9123%" y="213" width="0.1323%" height="15" fill="rgb(205,185,37)" fg:x="7133" fg:w="15"/><text x="63.1623%" y="223.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (15 samples, 0.13%)</title><rect x="62.9123%" y="197" width="0.1323%" height="15" fill="rgb(238,207,15)" fg:x="7133" fg:w="15"/><text x="63.1623%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (75 samples, 0.66%)</title><rect x="62.4890%" y="261" width="0.6615%" height="15" fill="rgb(213,199,42)" fg:x="7085" fg:w="75"/><text x="62.7390%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (12 samples, 0.11%)</title><rect x="63.0446%" y="245" width="0.1058%" height="15" fill="rgb(235,201,11)" fg:x="7148" fg:w="12"/><text x="63.2946%" y="255.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (12 samples, 0.11%)</title><rect x="63.0446%" y="229" width="0.1058%" height="15" fill="rgb(207,46,11)" fg:x="7148" fg:w="12"/><text x="63.2946%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (17 samples, 0.15%)</title><rect x="63.2828%" y="245" width="0.1499%" height="15" fill="rgb(241,35,35)" fg:x="7175" fg:w="17"/><text x="63.5328%" y="255.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (13 samples, 0.11%)</title><rect x="63.3180%" y="229" width="0.1147%" height="15" fill="rgb(243,32,47)" fg:x="7179" fg:w="13"/><text x="63.5680%" y="239.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (13 samples, 0.11%)</title><rect x="63.3180%" y="213" width="0.1147%" height="15" fill="rgb(247,202,23)" fg:x="7179" fg:w="13"/><text x="63.5680%" y="223.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (13 samples, 0.11%)</title><rect x="63.3180%" y="197" width="0.1147%" height="15" fill="rgb(219,102,11)" fg:x="7179" fg:w="13"/><text x="63.5680%" y="207.50"></text></g><g><title>rum::functions::cmov (137 samples, 1.21%)</title><rect x="62.2420%" y="277" width="1.2083%" height="15" fill="rgb(243,110,44)" fg:x="7057" fg:w="137"/><text x="62.4920%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (34 samples, 0.30%)</title><rect x="63.1505%" y="261" width="0.2999%" height="15" fill="rgb(222,74,54)" fg:x="7160" fg:w="34"/><text x="63.4005%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.02%)</title><rect x="63.4327%" y="245" width="0.0176%" height="15" fill="rgb(216,99,12)" fg:x="7192" fg:w="2"/><text x="63.6827%" y="255.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.02%)</title><rect x="63.4327%" y="229" width="0.0176%" height="15" fill="rgb(226,22,26)" fg:x="7192" fg:w="2"/><text x="63.6827%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.03%)</title><rect x="63.4680%" y="245" width="0.0265%" height="15" fill="rgb(217,163,10)" fg:x="7196" fg:w="3"/><text x="63.7180%" y="255.50"></text></g><g><title>core::slice::raw::from_raw_parts (2 samples, 0.02%)</title><rect x="63.4768%" y="229" width="0.0176%" height="15" fill="rgb(213,25,53)" fg:x="7197" fg:w="2"/><text x="63.7268%" y="239.50"></text></g><g><title>core::ptr::slice_from_raw_parts (2 samples, 0.02%)</title><rect x="63.4768%" y="213" width="0.0176%" height="15" fill="rgb(252,105,26)" fg:x="7197" fg:w="2"/><text x="63.7268%" y="223.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (2 samples, 0.02%)</title><rect x="63.4768%" y="197" width="0.0176%" height="15" fill="rgb(220,39,43)" fg:x="7197" fg:w="2"/><text x="63.7268%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (7 samples, 0.06%)</title><rect x="63.4503%" y="261" width="0.0617%" height="15" fill="rgb(229,68,48)" fg:x="7194" fg:w="7"/><text x="63.7003%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.02%)</title><rect x="63.4944%" y="245" width="0.0176%" height="15" fill="rgb(252,8,32)" fg:x="7199" fg:w="2"/><text x="63.7444%" y="255.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.02%)</title><rect x="63.4944%" y="229" width="0.0176%" height="15" fill="rgb(223,20,43)" fg:x="7199" fg:w="2"/><text x="63.7444%" y="239.50"></text></g><g><title>rum::functions::div (10 samples, 0.09%)</title><rect x="63.4503%" y="277" width="0.0882%" height="15" fill="rgb(229,81,49)" fg:x="7194" fg:w="10"/><text x="63.7003%" y="287.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_div (2 samples, 0.02%)</title><rect x="63.5209%" y="261" width="0.0176%" height="15" fill="rgb(236,28,36)" fg:x="7202" fg:w="2"/><text x="63.7709%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.02%)</title><rect x="63.9972%" y="213" width="0.0176%" height="15" fill="rgb(249,185,26)" fg:x="7256" fg:w="2"/><text x="64.2472%" y="223.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (2 samples, 0.02%)</title><rect x="63.9972%" y="197" width="0.0176%" height="15" fill="rgb(249,174,33)" fg:x="7256" fg:w="2"/><text x="64.2472%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (12 samples, 0.11%)</title><rect x="63.9972%" y="229" width="0.1058%" height="15" fill="rgb(233,201,37)" fg:x="7256" fg:w="12"/><text x="64.2472%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (10 samples, 0.09%)</title><rect x="64.0148%" y="213" width="0.0882%" height="15" fill="rgb(221,78,26)" fg:x="7258" fg:w="10"/><text x="64.2648%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (48 samples, 0.42%)</title><rect x="63.9619%" y="245" width="0.4234%" height="15" fill="rgb(250,127,30)" fg:x="7252" fg:w="48"/><text x="64.2119%" y="255.50"></text></g><g><title>core::slice::raw::from_raw_parts (32 samples, 0.28%)</title><rect x="64.1030%" y="229" width="0.2822%" height="15" fill="rgb(230,49,44)" fg:x="7268" fg:w="32"/><text x="64.3530%" y="239.50"></text></g><g><title>core::ptr::slice_from_raw_parts (32 samples, 0.28%)</title><rect x="64.1030%" y="213" width="0.2822%" height="15" fill="rgb(229,67,23)" fg:x="7268" fg:w="32"/><text x="64.3530%" y="223.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (32 samples, 0.28%)</title><rect x="64.1030%" y="197" width="0.2822%" height="15" fill="rgb(249,83,47)" fg:x="7268" fg:w="32"/><text x="64.3530%" y="207.50"></text></g><g><title>rum::functions::load_program (123 samples, 1.08%)</title><rect x="63.5385%" y="277" width="1.0848%" height="15" fill="rgb(215,43,3)" fg:x="7204" fg:w="123"/><text x="63.7885%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (111 samples, 0.98%)</title><rect x="63.6444%" y="261" width="0.9790%" height="15" fill="rgb(238,154,13)" fg:x="7216" fg:w="111"/><text x="63.8944%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (27 samples, 0.24%)</title><rect x="64.3853%" y="245" width="0.2381%" height="15" fill="rgb(219,56,2)" fg:x="7300" fg:w="27"/><text x="64.6353%" y="255.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (26 samples, 0.23%)</title><rect x="64.3941%" y="229" width="0.2293%" height="15" fill="rgb(233,0,4)" fg:x="7301" fg:w="26"/><text x="64.6441%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.04%)</title><rect x="67.5604%" y="213" width="0.0353%" height="15" fill="rgb(235,30,7)" fg:x="7660" fg:w="4"/><text x="67.8104%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (42 samples, 0.37%)</title><rect x="67.5604%" y="229" width="0.3704%" height="15" fill="rgb(250,79,13)" fg:x="7660" fg:w="42"/><text x="67.8104%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (38 samples, 0.34%)</title><rect x="67.5957%" y="213" width="0.3352%" height="15" fill="rgb(211,146,34)" fg:x="7664" fg:w="38"/><text x="67.8457%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (195 samples, 1.72%)</title><rect x="67.3576%" y="245" width="1.7199%" height="15" fill="rgb(228,22,38)" fg:x="7637" fg:w="195"/><text x="67.6076%" y="255.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (130 samples, 1.15%)</title><rect x="67.9309%" y="229" width="1.1466%" height="15" fill="rgb(235,168,5)" fg:x="7702" fg:w="130"/><text x="68.1809%" y="239.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (130 samples, 1.15%)</title><rect x="67.9309%" y="213" width="1.1466%" height="15" fill="rgb(221,155,16)" fg:x="7702" fg:w="130"/><text x="68.1809%" y="223.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (130 samples, 1.15%)</title><rect x="67.9309%" y="197" width="1.1466%" height="15" fill="rgb(215,215,53)" fg:x="7702" fg:w="130"/><text x="68.1809%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (494 samples, 4.36%)</title><rect x="65.5318%" y="261" width="4.3570%" height="15" fill="rgb(223,4,10)" fg:x="7430" fg:w="494"/><text x="65.7818%" y="271.50">&lt;allo..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (91 samples, 0.80%)</title><rect x="69.0863%" y="245" width="0.8026%" height="15" fill="rgb(234,103,6)" fg:x="7833" fg:w="91"/><text x="69.3363%" y="255.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (89 samples, 0.78%)</title><rect x="69.1039%" y="229" width="0.7850%" height="15" fill="rgb(227,97,0)" fg:x="7835" fg:w="89"/><text x="69.3539%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="69.8712%" y="213" width="0.0176%" height="15" fill="rgb(234,150,53)" fg:x="7922" fg:w="2"/><text x="70.1212%" y="223.50"></text></g><g><title>rum::functions::load_value (604 samples, 5.33%)</title><rect x="64.6234%" y="277" width="5.3272%" height="15" fill="rgb(228,201,54)" fg:x="7327" fg:w="604"/><text x="64.8734%" y="287.50">rum::fu..</text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="69.8889%" y="261" width="0.0617%" height="15" fill="rgb(222,22,37)" fg:x="7924" fg:w="7"/><text x="70.1389%" y="271.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="69.8889%" y="245" width="0.0617%" height="15" fill="rgb(237,53,32)" fg:x="7924" fg:w="7"/><text x="70.1389%" y="255.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="69.8889%" y="229" width="0.0617%" height="15" fill="rgb(233,25,53)" fg:x="7924" fg:w="7"/><text x="70.1389%" y="239.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="69.8889%" y="213" width="0.0617%" height="15" fill="rgb(210,40,34)" fg:x="7924" fg:w="7"/><text x="70.1389%" y="223.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="69.8889%" y="197" width="0.0617%" height="15" fill="rgb(241,220,44)" fg:x="7924" fg:w="7"/><text x="70.1389%" y="207.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="69.8889%" y="181" width="0.0617%" height="15" fill="rgb(235,28,35)" fg:x="7924" fg:w="7"/><text x="70.1389%" y="191.50"></text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="69.8889%" y="165" width="0.0617%" height="15" fill="rgb(210,56,17)" fg:x="7924" fg:w="7"/><text x="70.1389%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.06%)</title><rect x="70.1887%" y="245" width="0.0617%" height="15" fill="rgb(224,130,29)" fg:x="7958" fg:w="7"/><text x="70.4387%" y="255.50"></text></g><g><title>core::slice::raw::from_raw_parts (7 samples, 0.06%)</title><rect x="70.1887%" y="229" width="0.0617%" height="15" fill="rgb(235,212,8)" fg:x="7958" fg:w="7"/><text x="70.4387%" y="239.50"></text></g><g><title>core::ptr::slice_from_raw_parts (7 samples, 0.06%)</title><rect x="70.1887%" y="213" width="0.0617%" height="15" fill="rgb(223,33,50)" fg:x="7958" fg:w="7"/><text x="70.4387%" y="223.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (7 samples, 0.06%)</title><rect x="70.1887%" y="197" width="0.0617%" height="15" fill="rgb(219,149,13)" fg:x="7958" fg:w="7"/><text x="70.4387%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (18 samples, 0.16%)</title><rect x="70.1182%" y="261" width="0.1588%" height="15" fill="rgb(250,156,29)" fg:x="7950" fg:w="18"/><text x="70.3682%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.03%)</title><rect x="70.2505%" y="245" width="0.0265%" height="15" fill="rgb(216,193,19)" fg:x="7965" fg:w="3"/><text x="70.5005%" y="255.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.03%)</title><rect x="70.2505%" y="229" width="0.0265%" height="15" fill="rgb(216,135,14)" fg:x="7965" fg:w="3"/><text x="70.5005%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (9 samples, 0.08%)</title><rect x="70.3651%" y="245" width="0.0794%" height="15" fill="rgb(241,47,5)" fg:x="7978" fg:w="9"/><text x="70.6151%" y="255.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (6 samples, 0.05%)</title><rect x="70.3916%" y="229" width="0.0529%" height="15" fill="rgb(233,42,35)" fg:x="7981" fg:w="6"/><text x="70.6416%" y="239.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (6 samples, 0.05%)</title><rect x="70.3916%" y="213" width="0.0529%" height="15" fill="rgb(231,13,6)" fg:x="7981" fg:w="6"/><text x="70.6416%" y="223.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (6 samples, 0.05%)</title><rect x="70.3916%" y="197" width="0.0529%" height="15" fill="rgb(207,181,40)" fg:x="7981" fg:w="6"/><text x="70.6416%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (26 samples, 0.23%)</title><rect x="70.2769%" y="261" width="0.2293%" height="15" fill="rgb(254,173,49)" fg:x="7968" fg:w="26"/><text x="70.5269%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (7 samples, 0.06%)</title><rect x="70.4445%" y="245" width="0.0617%" height="15" fill="rgb(221,1,38)" fg:x="7987" fg:w="7"/><text x="70.6945%" y="255.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (7 samples, 0.06%)</title><rect x="70.4445%" y="229" width="0.0617%" height="15" fill="rgb(206,124,46)" fg:x="7987" fg:w="7"/><text x="70.6945%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (4 samples, 0.04%)</title><rect x="70.5504%" y="245" width="0.0353%" height="15" fill="rgb(249,21,11)" fg:x="7999" fg:w="4"/><text x="70.8004%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (4 samples, 0.04%)</title><rect x="70.5504%" y="229" width="0.0353%" height="15" fill="rgb(222,201,40)" fg:x="7999" fg:w="4"/><text x="70.8004%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (17 samples, 0.15%)</title><rect x="70.5063%" y="261" width="0.1499%" height="15" fill="rgb(235,61,29)" fg:x="7994" fg:w="17"/><text x="70.7563%" y="271.50"></text></g><g><title>core::ptr::read (8 samples, 0.07%)</title><rect x="70.5856%" y="245" width="0.0706%" height="15" fill="rgb(219,207,3)" fg:x="8003" fg:w="8"/><text x="70.8356%" y="255.50"></text></g><g><title>&lt;u32 as alloc::vec::is_zero::IsZero&gt;::is_zero (5 samples, 0.04%)</title><rect x="70.7532%" y="229" width="0.0441%" height="15" fill="rgb(222,56,46)" fg:x="8022" fg:w="5"/><text x="71.0032%" y="239.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.03%)</title><rect x="71.1589%" y="165" width="0.0265%" height="15" fill="rgb(239,76,54)" fg:x="8068" fg:w="3"/><text x="71.4089%" y="175.50"></text></g><g><title>__libc_calloc (33 samples, 0.29%)</title><rect x="71.1942%" y="149" width="0.2911%" height="15" fill="rgb(231,124,27)" fg:x="8072" fg:w="33"/><text x="71.4442%" y="159.50"></text></g><g><title>_int_malloc (16 samples, 0.14%)</title><rect x="71.3442%" y="133" width="0.1411%" height="15" fill="rgb(249,195,6)" fg:x="8089" fg:w="16"/><text x="71.5942%" y="143.50"></text></g><g><title>alloc::alloc::alloc_zeroed (36 samples, 0.32%)</title><rect x="71.1854%" y="165" width="0.3175%" height="15" fill="rgb(237,174,47)" fg:x="8071" fg:w="36"/><text x="71.4354%" y="175.50"></text></g><g><title>core::alloc::layout::Layout::size (2 samples, 0.02%)</title><rect x="71.5029%" y="165" width="0.0176%" height="15" fill="rgb(206,201,31)" fg:x="8107" fg:w="2"/><text x="71.7529%" y="175.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (2 samples, 0.02%)</title><rect x="71.5206%" y="165" width="0.0176%" height="15" fill="rgb(231,57,52)" fg:x="8109" fg:w="2"/><text x="71.7706%" y="175.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (14 samples, 0.12%)</title><rect x="71.5382%" y="165" width="0.1235%" height="15" fill="rgb(248,177,22)" fg:x="8111" fg:w="14"/><text x="71.7882%" y="175.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (9 samples, 0.08%)</title><rect x="71.5823%" y="149" width="0.0794%" height="15" fill="rgb(215,211,37)" fg:x="8116" fg:w="9"/><text x="71.8323%" y="159.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (3 samples, 0.03%)</title><rect x="71.6352%" y="133" width="0.0265%" height="15" fill="rgb(241,128,51)" fg:x="8122" fg:w="3"/><text x="71.8852%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (76 samples, 0.67%)</title><rect x="71.0178%" y="197" width="0.6703%" height="15" fill="rgb(227,165,31)" fg:x="8052" fg:w="76"/><text x="71.2678%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (75 samples, 0.66%)</title><rect x="71.0266%" y="181" width="0.6615%" height="15" fill="rgb(228,167,24)" fg:x="8053" fg:w="75"/><text x="71.2766%" y="191.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (3 samples, 0.03%)</title><rect x="71.6617%" y="165" width="0.0265%" height="15" fill="rgb(228,143,12)" fg:x="8125" fg:w="3"/><text x="71.9117%" y="175.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (3 samples, 0.03%)</title><rect x="71.6617%" y="149" width="0.0265%" height="15" fill="rgb(249,149,8)" fg:x="8125" fg:w="3"/><text x="71.9117%" y="159.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (3 samples, 0.03%)</title><rect x="71.6617%" y="133" width="0.0265%" height="15" fill="rgb(243,35,44)" fg:x="8125" fg:w="3"/><text x="71.9117%" y="143.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (46 samples, 0.41%)</title><rect x="71.7234%" y="181" width="0.4057%" height="15" fill="rgb(246,89,9)" fg:x="8132" fg:w="46"/><text x="71.9734%" y="191.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (3 samples, 0.03%)</title><rect x="72.1027%" y="165" width="0.0265%" height="15" fill="rgb(233,213,13)" fg:x="8175" fg:w="3"/><text x="72.3527%" y="175.50"></text></g><g><title>core::alloc::layout::Layout::array (52 samples, 0.46%)</title><rect x="71.6881%" y="197" width="0.4586%" height="15" fill="rgb(233,141,41)" fg:x="8128" fg:w="52"/><text x="71.9381%" y="207.50"></text></g><g><title>core::ptr::alignment::Alignment::of (2 samples, 0.02%)</title><rect x="72.1291%" y="181" width="0.0176%" height="15" fill="rgb(239,167,4)" fg:x="8178" fg:w="2"/><text x="72.3791%" y="191.50"></text></g><g><title>core::mem::align_of (2 samples, 0.02%)</title><rect x="72.1291%" y="165" width="0.0176%" height="15" fill="rgb(209,217,16)" fg:x="8178" fg:w="2"/><text x="72.3791%" y="175.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (6 samples, 0.05%)</title><rect x="72.1468%" y="197" width="0.0529%" height="15" fill="rgb(219,88,35)" fg:x="8180" fg:w="6"/><text x="72.3968%" y="207.50"></text></g><g><title>alloc::vec::from_elem (176 samples, 1.55%)</title><rect x="70.6650%" y="261" width="1.5523%" height="15" fill="rgb(220,193,23)" fg:x="8012" fg:w="176"/><text x="70.9150%" y="271.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (175 samples, 1.54%)</title><rect x="70.6738%" y="245" width="1.5435%" height="15" fill="rgb(230,90,52)" fg:x="8013" fg:w="175"/><text x="70.9238%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (161 samples, 1.42%)</title><rect x="70.7973%" y="229" width="1.4200%" height="15" fill="rgb(252,106,19)" fg:x="8027" fg:w="161"/><text x="71.0473%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (160 samples, 1.41%)</title><rect x="70.8061%" y="213" width="1.4112%" height="15" fill="rgb(206,74,20)" fg:x="8028" fg:w="160"/><text x="71.0561%" y="223.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (2 samples, 0.02%)</title><rect x="72.1997%" y="197" width="0.0176%" height="15" fill="rgb(230,138,44)" fg:x="8186" fg:w="2"/><text x="72.4497%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.02%)</title><rect x="72.2791%" y="213" width="0.0176%" height="15" fill="rgb(235,182,43)" fg:x="8195" fg:w="2"/><text x="72.5291%" y="223.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (2 samples, 0.02%)</title><rect x="72.2791%" y="197" width="0.0176%" height="15" fill="rgb(242,16,51)" fg:x="8195" fg:w="2"/><text x="72.5291%" y="207.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.02%)</title><rect x="72.2791%" y="181" width="0.0176%" height="15" fill="rgb(248,9,4)" fg:x="8195" fg:w="2"/><text x="72.5291%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (9 samples, 0.08%)</title><rect x="72.2791%" y="229" width="0.0794%" height="15" fill="rgb(210,31,22)" fg:x="8195" fg:w="9"/><text x="72.5291%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (7 samples, 0.06%)</title><rect x="72.2967%" y="213" width="0.0617%" height="15" fill="rgb(239,54,39)" fg:x="8197" fg:w="7"/><text x="72.5467%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.16%)</title><rect x="72.2261%" y="245" width="0.1588%" height="15" fill="rgb(230,99,41)" fg:x="8189" fg:w="18"/><text x="72.4761%" y="255.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (3 samples, 0.03%)</title><rect x="72.3584%" y="229" width="0.0265%" height="15" fill="rgb(253,106,12)" fg:x="8204" fg:w="3"/><text x="72.6084%" y="239.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (3 samples, 0.03%)</title><rect x="72.3584%" y="213" width="0.0265%" height="15" fill="rgb(213,46,41)" fg:x="8204" fg:w="3"/><text x="72.6084%" y="223.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="72.5437%" y="165" width="0.0265%" height="15" fill="rgb(215,133,35)" fg:x="8225" fg:w="3"/><text x="72.7937%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="72.5525%" y="149" width="0.0176%" height="15" fill="rgb(213,28,5)" fg:x="8226" fg:w="2"/><text x="72.8025%" y="159.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="72.5525%" y="133" width="0.0176%" height="15" fill="rgb(215,77,49)" fg:x="8226" fg:w="2"/><text x="72.8025%" y="143.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="72.5525%" y="117" width="0.0176%" height="15" fill="rgb(248,100,22)" fg:x="8226" fg:w="2"/><text x="72.8025%" y="127.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="72.5525%" y="101" width="0.0176%" height="15" fill="rgb(208,67,9)" fg:x="8226" fg:w="2"/><text x="72.8025%" y="111.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="72.5525%" y="85" width="0.0176%" height="15" fill="rgb(219,133,21)" fg:x="8226" fg:w="2"/><text x="72.8025%" y="95.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="72.5525%" y="69" width="0.0176%" height="15" fill="rgb(246,46,29)" fg:x="8226" fg:w="2"/><text x="72.8025%" y="79.50"></text></g><g><title>__GI___libc_free (18 samples, 0.16%)</title><rect x="72.4819%" y="181" width="0.1588%" height="15" fill="rgb(246,185,52)" fg:x="8218" fg:w="18"/><text x="72.7319%" y="191.50"></text></g><g><title>_int_free (8 samples, 0.07%)</title><rect x="72.5701%" y="165" width="0.0706%" height="15" fill="rgb(252,136,11)" fg:x="8228" fg:w="8"/><text x="72.8201%" y="175.50"></text></g><g><title>__rust_dealloc (2 samples, 0.02%)</title><rect x="72.6407%" y="181" width="0.0176%" height="15" fill="rgb(219,138,53)" fg:x="8236" fg:w="2"/><text x="72.8907%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.19%)</title><rect x="72.4731%" y="197" width="0.1940%" height="15" fill="rgb(211,51,23)" fg:x="8217" fg:w="22"/><text x="72.7231%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (28 samples, 0.25%)</title><rect x="72.4378%" y="213" width="0.2470%" height="15" fill="rgb(247,221,28)" fg:x="8213" fg:w="28"/><text x="72.6878%" y="223.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.02%)</title><rect x="72.6671%" y="197" width="0.0176%" height="15" fill="rgb(251,222,45)" fg:x="8239" fg:w="2"/><text x="72.9171%" y="207.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.04%)</title><rect x="72.8700%" y="197" width="0.0441%" height="15" fill="rgb(217,162,53)" fg:x="8262" fg:w="5"/><text x="73.1200%" y="207.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (4 samples, 0.04%)</title><rect x="72.8788%" y="181" width="0.0353%" height="15" fill="rgb(229,93,14)" fg:x="8263" fg:w="4"/><text x="73.1288%" y="191.50"></text></g><g><title>rum::functions::map_seg (337 samples, 2.97%)</title><rect x="69.9506%" y="277" width="2.9723%" height="15" fill="rgb(209,67,49)" fg:x="7931" fg:w="337"/><text x="70.2006%" y="287.50">rum..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (80 samples, 0.71%)</title><rect x="72.2173%" y="261" width="0.7056%" height="15" fill="rgb(213,87,29)" fg:x="8188" fg:w="80"/><text x="72.4673%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (61 samples, 0.54%)</title><rect x="72.3849%" y="245" width="0.5380%" height="15" fill="rgb(205,151,52)" fg:x="8207" fg:w="61"/><text x="72.6349%" y="255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.52%)</title><rect x="72.4025%" y="229" width="0.5204%" height="15" fill="rgb(253,215,39)" fg:x="8209" fg:w="59"/><text x="72.6525%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (27 samples, 0.24%)</title><rect x="72.6848%" y="213" width="0.2381%" height="15" fill="rgb(221,220,41)" fg:x="8241" fg:w="27"/><text x="72.9348%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4 samples, 0.04%)</title><rect x="72.9229%" y="261" width="0.0353%" height="15" fill="rgb(218,133,21)" fg:x="8268" fg:w="4"/><text x="73.1729%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="72.9406%" y="245" width="0.0176%" height="15" fill="rgb(221,193,43)" fg:x="8270" fg:w="2"/><text x="73.1906%" y="255.50"></text></g><g><title>core::slice::raw::from_raw_parts (2 samples, 0.02%)</title><rect x="72.9406%" y="229" width="0.0176%" height="15" fill="rgb(240,128,52)" fg:x="8270" fg:w="2"/><text x="73.1906%" y="239.50"></text></g><g><title>core::ptr::slice_from_raw_parts (2 samples, 0.02%)</title><rect x="72.9406%" y="213" width="0.0176%" height="15" fill="rgb(253,114,12)" fg:x="8270" fg:w="2"/><text x="73.1906%" y="223.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (2 samples, 0.02%)</title><rect x="72.9406%" y="197" width="0.0176%" height="15" fill="rgb(215,223,47)" fg:x="8270" fg:w="2"/><text x="73.1906%" y="207.50"></text></g><g><title>rum::functions::mult (5 samples, 0.04%)</title><rect x="72.9229%" y="277" width="0.0441%" height="15" fill="rgb(248,225,23)" fg:x="8268" fg:w="5"/><text x="73.1729%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (10 samples, 0.09%)</title><rect x="80.2963%" y="213" width="0.0882%" height="15" fill="rgb(250,108,0)" fg:x="9104" fg:w="10"/><text x="80.5463%" y="223.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (10 samples, 0.09%)</title><rect x="80.2963%" y="197" width="0.0882%" height="15" fill="rgb(228,208,7)" fg:x="9104" fg:w="10"/><text x="80.5463%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (77 samples, 0.68%)</title><rect x="80.1200%" y="229" width="0.6791%" height="15" fill="rgb(244,45,10)" fg:x="9084" fg:w="77"/><text x="80.3700%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (47 samples, 0.41%)</title><rect x="80.3845%" y="213" width="0.4145%" height="15" fill="rgb(207,125,25)" fg:x="9114" fg:w="47"/><text x="80.6345%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (18 samples, 0.16%)</title><rect x="80.6403%" y="197" width="0.1588%" height="15" fill="rgb(210,195,18)" fg:x="9143" fg:w="18"/><text x="80.8903%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (18 samples, 0.16%)</title><rect x="80.6403%" y="181" width="0.1588%" height="15" fill="rgb(249,80,12)" fg:x="9143" fg:w="18"/><text x="80.8903%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (447 samples, 3.94%)</title><rect x="79.5202%" y="245" width="3.9425%" height="15" fill="rgb(221,65,9)" fg:x="9016" fg:w="447"/><text x="79.7702%" y="255.50">&lt;all..</text></g><g><title>core::slice::raw::from_raw_parts (302 samples, 2.66%)</title><rect x="80.7991%" y="229" width="2.6636%" height="15" fill="rgb(235,49,36)" fg:x="9161" fg:w="302"/><text x="81.0491%" y="239.50">co..</text></g><g><title>core::ptr::slice_from_raw_parts (302 samples, 2.66%)</title><rect x="80.7991%" y="213" width="2.6636%" height="15" fill="rgb(225,32,20)" fg:x="9161" fg:w="302"/><text x="81.0491%" y="223.50">co..</text></g><g><title>core::ptr::metadata::from_raw_parts (302 samples, 2.66%)</title><rect x="80.7991%" y="197" width="2.6636%" height="15" fill="rgb(215,141,46)" fg:x="9161" fg:w="302"/><text x="81.0491%" y="207.50">co..</text></g><g><title>[unknown] (9 samples, 0.08%)</title><rect x="83.3833%" y="181" width="0.0794%" height="15" fill="rgb(250,160,47)" fg:x="9454" fg:w="9"/><text x="83.6333%" y="191.50"></text></g><g><title>[unknown] (9 samples, 0.08%)</title><rect x="83.3833%" y="165" width="0.0794%" height="15" fill="rgb(216,222,40)" fg:x="9454" fg:w="9"/><text x="83.6333%" y="175.50"></text></g><g><title>[unknown] (9 samples, 0.08%)</title><rect x="83.3833%" y="149" width="0.0794%" height="15" fill="rgb(234,217,39)" fg:x="9454" fg:w="9"/><text x="83.6333%" y="159.50"></text></g><g><title>[unknown] (9 samples, 0.08%)</title><rect x="83.3833%" y="133" width="0.0794%" height="15" fill="rgb(207,178,40)" fg:x="9454" fg:w="9"/><text x="83.6333%" y="143.50"></text></g><g><title>[unknown] (9 samples, 0.08%)</title><rect x="83.3833%" y="117" width="0.0794%" height="15" fill="rgb(221,136,13)" fg:x="9454" fg:w="9"/><text x="83.6333%" y="127.50"></text></g><g><title>[unknown] (9 samples, 0.08%)</title><rect x="83.3833%" y="101" width="0.0794%" height="15" fill="rgb(249,199,10)" fg:x="9454" fg:w="9"/><text x="83.6333%" y="111.50"></text></g><g><title>[unknown] (9 samples, 0.08%)</title><rect x="83.3833%" y="85" width="0.0794%" height="15" fill="rgb(249,222,13)" fg:x="9454" fg:w="9"/><text x="83.6333%" y="95.50"></text></g><g><title>[unknown] (9 samples, 0.08%)</title><rect x="83.3833%" y="69" width="0.0794%" height="15" fill="rgb(244,185,38)" fg:x="9454" fg:w="9"/><text x="83.6333%" y="79.50"></text></g><g><title>[unknown] (9 samples, 0.08%)</title><rect x="83.3833%" y="53" width="0.0794%" height="15" fill="rgb(236,202,9)" fg:x="9454" fg:w="9"/><text x="83.6333%" y="63.50"></text></g><g><title>[unknown] (9 samples, 0.08%)</title><rect x="83.3833%" y="37" width="0.0794%" height="15" fill="rgb(250,229,37)" fg:x="9454" fg:w="9"/><text x="83.6333%" y="47.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="83.4627%" y="245" width="0.0265%" height="15" fill="rgb(206,174,23)" fg:x="9463" fg:w="3"/><text x="83.7127%" y="255.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="83.4627%" y="229" width="0.0265%" height="15" fill="rgb(211,33,43)" fg:x="9463" fg:w="3"/><text x="83.7127%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="83.4627%" y="213" width="0.0265%" height="15" fill="rgb(245,58,50)" fg:x="9463" fg:w="3"/><text x="83.7127%" y="223.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="83.4627%" y="197" width="0.0265%" height="15" fill="rgb(244,68,36)" fg:x="9463" fg:w="3"/><text x="83.7127%" y="207.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="83.4627%" y="181" width="0.0265%" height="15" fill="rgb(232,229,15)" fg:x="9463" fg:w="3"/><text x="83.7127%" y="191.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="83.4627%" y="165" width="0.0265%" height="15" fill="rgb(254,30,23)" fg:x="9463" fg:w="3"/><text x="83.7127%" y="175.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="83.4627%" y="149" width="0.0265%" height="15" fill="rgb(235,160,14)" fg:x="9463" fg:w="3"/><text x="83.7127%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1,213 samples, 10.70%)</title><rect x="74.6516%" y="261" width="10.6985%" height="15" fill="rgb(212,155,44)" fg:x="8464" fg:w="1213"/><text x="74.9016%" y="271.50">&lt;alloc::vec::Vec..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (211 samples, 1.86%)</title><rect x="83.4892%" y="245" width="1.8610%" height="15" fill="rgb(226,2,50)" fg:x="9466" fg:w="211"/><text x="83.7392%" y="255.50">c..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (196 samples, 1.73%)</title><rect x="83.6214%" y="229" width="1.7287%" height="15" fill="rgb(234,177,6)" fg:x="9481" fg:w="196"/><text x="83.8714%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (9 samples, 0.08%)</title><rect x="86.4879%" y="213" width="0.0794%" height="15" fill="rgb(217,24,9)" fg:x="9806" fg:w="9"/><text x="86.7379%" y="223.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (9 samples, 0.08%)</title><rect x="86.4879%" y="197" width="0.0794%" height="15" fill="rgb(220,13,46)" fg:x="9806" fg:w="9"/><text x="86.7379%" y="207.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (9 samples, 0.08%)</title><rect x="86.4879%" y="181" width="0.0794%" height="15" fill="rgb(239,221,27)" fg:x="9806" fg:w="9"/><text x="86.7379%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (21 samples, 0.19%)</title><rect x="86.4879%" y="229" width="0.1852%" height="15" fill="rgb(222,198,25)" fg:x="9806" fg:w="21"/><text x="86.7379%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (12 samples, 0.11%)</title><rect x="86.5673%" y="213" width="0.1058%" height="15" fill="rgb(211,99,13)" fg:x="9815" fg:w="12"/><text x="86.8173%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (100 samples, 0.88%)</title><rect x="86.3380%" y="245" width="0.8820%" height="15" fill="rgb(232,111,31)" fg:x="9789" fg:w="100"/><text x="86.5880%" y="255.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (62 samples, 0.55%)</title><rect x="86.6731%" y="229" width="0.5468%" height="15" fill="rgb(245,82,37)" fg:x="9827" fg:w="62"/><text x="86.9231%" y="239.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (62 samples, 0.55%)</title><rect x="86.6731%" y="213" width="0.5468%" height="15" fill="rgb(227,149,46)" fg:x="9827" fg:w="62"/><text x="86.9231%" y="223.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (62 samples, 0.55%)</title><rect x="86.6731%" y="197" width="0.5468%" height="15" fill="rgb(218,36,50)" fg:x="9827" fg:w="62"/><text x="86.9231%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (253 samples, 2.23%)</title><rect x="85.3501%" y="261" width="2.2314%" height="15" fill="rgb(226,80,48)" fg:x="9677" fg:w="253"/><text x="85.6001%" y="271.50">&lt;..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (41 samples, 0.36%)</title><rect x="87.2200%" y="245" width="0.3616%" height="15" fill="rgb(238,224,15)" fg:x="9889" fg:w="41"/><text x="87.4700%" y="255.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (36 samples, 0.32%)</title><rect x="87.2641%" y="229" width="0.3175%" height="15" fill="rgb(241,136,10)" fg:x="9894" fg:w="36"/><text x="87.5141%" y="239.50"></text></g><g><title>rum::functions::seg_load (1,658 samples, 14.62%)</title><rect x="72.9670%" y="277" width="14.6234%" height="15" fill="rgb(208,32,45)" fg:x="8273" fg:w="1658"/><text x="73.2170%" y="287.50">rum::functions::seg_lo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (13 samples, 0.11%)</title><rect x="92.3443%" y="213" width="0.1147%" height="15" fill="rgb(207,135,9)" fg:x="10470" fg:w="13"/><text x="92.5943%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (70 samples, 0.62%)</title><rect x="92.2649%" y="229" width="0.6174%" height="15" fill="rgb(206,86,44)" fg:x="10461" fg:w="70"/><text x="92.5149%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (48 samples, 0.42%)</title><rect x="92.4590%" y="213" width="0.4234%" height="15" fill="rgb(245,177,15)" fg:x="10483" fg:w="48"/><text x="92.7090%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (310 samples, 2.73%)</title><rect x="91.9474%" y="245" width="2.7342%" height="15" fill="rgb(206,64,50)" fg:x="10425" fg:w="310"/><text x="92.1974%" y="255.50">&lt;a..</text></g><g><title>core::slice::raw::from_raw_parts (204 samples, 1.80%)</title><rect x="92.8823%" y="229" width="1.7993%" height="15" fill="rgb(234,36,40)" fg:x="10531" fg:w="204"/><text x="93.1323%" y="239.50">c..</text></g><g><title>core::ptr::slice_from_raw_parts (204 samples, 1.80%)</title><rect x="92.8823%" y="213" width="1.7993%" height="15" fill="rgb(213,64,8)" fg:x="10531" fg:w="204"/><text x="93.1323%" y="223.50">c..</text></g><g><title>core::ptr::metadata::from_raw_parts (204 samples, 1.80%)</title><rect x="92.8823%" y="197" width="1.7993%" height="15" fill="rgb(210,75,36)" fg:x="10531" fg:w="204"/><text x="93.1323%" y="207.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (770 samples, 6.79%)</title><rect x="89.0721%" y="261" width="6.7913%" height="15" fill="rgb(229,88,21)" fg:x="10099" fg:w="770"/><text x="89.3221%" y="271.50">&lt;alloc::v..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (133 samples, 1.17%)</title><rect x="94.6904%" y="245" width="1.1730%" height="15" fill="rgb(252,204,47)" fg:x="10736" fg:w="133"/><text x="94.9404%" y="255.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (130 samples, 1.15%)</title><rect x="94.7169%" y="229" width="1.1466%" height="15" fill="rgb(208,77,27)" fg:x="10739" fg:w="130"/><text x="94.9669%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (18 samples, 0.16%)</title><rect x="97.8832%" y="229" width="0.1588%" height="15" fill="rgb(221,76,26)" fg:x="11098" fg:w="18"/><text x="98.1332%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (11 samples, 0.10%)</title><rect x="97.9450%" y="213" width="0.0970%" height="15" fill="rgb(225,139,18)" fg:x="11105" fg:w="11"/><text x="98.1950%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (6 samples, 0.05%)</title><rect x="97.9891%" y="197" width="0.0529%" height="15" fill="rgb(230,137,11)" fg:x="11110" fg:w="6"/><text x="98.2391%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (6 samples, 0.05%)</title><rect x="97.9891%" y="181" width="0.0529%" height="15" fill="rgb(212,28,1)" fg:x="11110" fg:w="6"/><text x="98.2391%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (114 samples, 1.01%)</title><rect x="97.5833%" y="245" width="1.0055%" height="15" fill="rgb(248,164,17)" fg:x="11064" fg:w="114"/><text x="97.8333%" y="255.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (62 samples, 0.55%)</title><rect x="98.0420%" y="229" width="0.5468%" height="15" fill="rgb(222,171,42)" fg:x="11116" fg:w="62"/><text x="98.2920%" y="239.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (62 samples, 0.55%)</title><rect x="98.0420%" y="213" width="0.5468%" height="15" fill="rgb(243,84,45)" fg:x="11116" fg:w="62"/><text x="98.2920%" y="223.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (62 samples, 0.55%)</title><rect x="98.0420%" y="197" width="0.5468%" height="15" fill="rgb(252,49,23)" fg:x="11116" fg:w="62"/><text x="98.2920%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (393 samples, 3.47%)</title><rect x="95.8635%" y="261" width="3.4662%" height="15" fill="rgb(215,19,7)" fg:x="10869" fg:w="393"/><text x="96.1135%" y="271.50">&lt;al..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (84 samples, 0.74%)</title><rect x="98.5888%" y="245" width="0.7409%" height="15" fill="rgb(238,81,41)" fg:x="11178" fg:w="84"/><text x="98.8388%" y="255.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (73 samples, 0.64%)</title><rect x="98.6858%" y="229" width="0.6439%" height="15" fill="rgb(210,199,37)" fg:x="11189" fg:w="73"/><text x="98.9358%" y="239.50"></text></g><g><title>rum::functions::seg_store (1,339 samples, 11.81%)</title><rect x="87.5904%" y="277" width="11.8098%" height="15" fill="rgb(244,192,49)" fg:x="9931" fg:w="1339"/><text x="87.8404%" y="287.50">rum::functions::se..</text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="99.3297%" y="261" width="0.0706%" height="15" fill="rgb(226,211,11)" fg:x="11262" fg:w="8"/><text x="99.5797%" y="271.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="99.3297%" y="245" width="0.0706%" height="15" fill="rgb(236,162,54)" fg:x="11262" fg:w="8"/><text x="99.5797%" y="255.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="99.3297%" y="229" width="0.0706%" height="15" fill="rgb(220,229,9)" fg:x="11262" fg:w="8"/><text x="99.5797%" y="239.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="99.3297%" y="213" width="0.0706%" height="15" fill="rgb(250,87,22)" fg:x="11262" fg:w="8"/><text x="99.5797%" y="223.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="99.3297%" y="197" width="0.0706%" height="15" fill="rgb(239,43,17)" fg:x="11262" fg:w="8"/><text x="99.5797%" y="207.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="99.3297%" y="181" width="0.0706%" height="15" fill="rgb(231,177,25)" fg:x="11262" fg:w="8"/><text x="99.5797%" y="191.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="99.3297%" y="165" width="0.0706%" height="15" fill="rgb(219,179,1)" fg:x="11262" fg:w="8"/><text x="99.5797%" y="175.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="99.3297%" y="149" width="0.0706%" height="15" fill="rgb(238,219,53)" fg:x="11262" fg:w="8"/><text x="99.5797%" y="159.50"></text></g><g><title>[unknown] (8 samples, 0.07%)</title><rect x="99.3297%" y="133" width="0.0706%" height="15" fill="rgb(232,167,36)" fg:x="11262" fg:w="8"/><text x="99.5797%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.04%)</title><rect x="99.4796%" y="245" width="0.0441%" height="15" fill="rgb(244,19,51)" fg:x="11279" fg:w="5"/><text x="99.7296%" y="255.50"></text></g><g><title>core::slice::raw::from_raw_parts (5 samples, 0.04%)</title><rect x="99.4796%" y="229" width="0.0441%" height="15" fill="rgb(224,6,22)" fg:x="11279" fg:w="5"/><text x="99.7296%" y="239.50"></text></g><g><title>core::ptr::slice_from_raw_parts (5 samples, 0.04%)</title><rect x="99.4796%" y="213" width="0.0441%" height="15" fill="rgb(224,145,5)" fg:x="11279" fg:w="5"/><text x="99.7296%" y="223.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (5 samples, 0.04%)</title><rect x="99.4796%" y="197" width="0.0441%" height="15" fill="rgb(234,130,49)" fg:x="11279" fg:w="5"/><text x="99.7296%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (12 samples, 0.11%)</title><rect x="99.4443%" y="261" width="0.1058%" height="15" fill="rgb(254,6,2)" fg:x="11275" fg:w="12"/><text x="99.6943%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.03%)</title><rect x="99.5237%" y="245" width="0.0265%" height="15" fill="rgb(208,96,46)" fg:x="11284" fg:w="3"/><text x="99.7737%" y="255.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.03%)</title><rect x="99.5237%" y="229" width="0.0265%" height="15" fill="rgb(239,3,39)" fg:x="11284" fg:w="3"/><text x="99.7737%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (4 samples, 0.04%)</title><rect x="99.6560%" y="245" width="0.0353%" height="15" fill="rgb(233,210,1)" fg:x="11299" fg:w="4"/><text x="99.9060%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (22 samples, 0.19%)</title><rect x="99.5502%" y="261" width="0.1940%" height="15" fill="rgb(244,137,37)" fg:x="11287" fg:w="22"/><text x="99.8002%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (6 samples, 0.05%)</title><rect x="99.6913%" y="245" width="0.0529%" height="15" fill="rgb(240,136,2)" fg:x="11303" fg:w="6"/><text x="99.9413%" y="255.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.02%)</title><rect x="99.7266%" y="229" width="0.0176%" height="15" fill="rgb(239,18,37)" fg:x="11307" fg:w="2"/><text x="99.9766%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (6 samples, 0.05%)</title><rect x="99.7707%" y="213" width="0.0529%" height="15" fill="rgb(218,185,22)" fg:x="11312" fg:w="6"/><text x="100.0207%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (5 samples, 0.04%)</title><rect x="99.7795%" y="197" width="0.0441%" height="15" fill="rgb(225,218,4)" fg:x="11313" fg:w="5"/><text x="100.0295%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (14 samples, 0.12%)</title><rect x="99.7442%" y="261" width="0.1235%" height="15" fill="rgb(230,182,32)" fg:x="11309" fg:w="14"/><text x="99.9942%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (13 samples, 0.11%)</title><rect x="99.7530%" y="245" width="0.1147%" height="15" fill="rgb(242,56,43)" fg:x="11310" fg:w="13"/><text x="100.0030%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (13 samples, 0.11%)</title><rect x="99.7530%" y="229" width="0.1147%" height="15" fill="rgb(233,99,24)" fg:x="11310" fg:w="13"/><text x="100.0030%" y="239.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (5 samples, 0.04%)</title><rect x="99.8236%" y="213" width="0.0441%" height="15" fill="rgb(234,209,42)" fg:x="11318" fg:w="5"/><text x="100.0736%" y="223.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (5 samples, 0.04%)</title><rect x="99.8236%" y="197" width="0.0441%" height="15" fill="rgb(227,7,12)" fg:x="11318" fg:w="5"/><text x="100.0736%" y="207.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (5 samples, 0.04%)</title><rect x="99.8236%" y="181" width="0.0441%" height="15" fill="rgb(245,203,43)" fg:x="11318" fg:w="5"/><text x="100.0736%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.02%)</title><rect x="99.9294%" y="245" width="0.0176%" height="15" fill="rgb(238,205,33)" fg:x="11330" fg:w="2"/><text x="100.1794%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.02%)</title><rect x="99.9294%" y="229" width="0.0176%" height="15" fill="rgb(231,56,7)" fg:x="11330" fg:w="2"/><text x="100.1794%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (2 samples, 0.02%)</title><rect x="99.9294%" y="213" width="0.0176%" height="15" fill="rgb(244,186,29)" fg:x="11330" fg:w="2"/><text x="100.1794%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (2 samples, 0.02%)</title><rect x="99.9294%" y="197" width="0.0176%" height="15" fill="rgb(234,111,31)" fg:x="11330" fg:w="2"/><text x="100.1794%" y="207.50"></text></g><g><title>rum::execute::Um::execute (7,744 samples, 68.30%)</title><rect x="31.6899%" y="293" width="68.3013%" height="15" fill="rgb(241,149,10)" fg:x="3593" fg:w="7744"/><text x="31.9399%" y="303.50">rum::execute::Um::execute</text></g><g><title>rum::functions::unmap_seg (67 samples, 0.59%)</title><rect x="99.4002%" y="277" width="0.5909%" height="15" fill="rgb(249,206,44)" fg:x="11270" fg:w="67"/><text x="99.6502%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 0.12%)</title><rect x="99.8677%" y="261" width="0.1235%" height="15" fill="rgb(251,153,30)" fg:x="11323" fg:w="14"/><text x="100.1177%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (5 samples, 0.04%)</title><rect x="99.9471%" y="245" width="0.0441%" height="15" fill="rgb(239,152,38)" fg:x="11332" fg:w="5"/><text x="100.1971%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.04%)</title><rect x="99.9471%" y="229" width="0.0441%" height="15" fill="rgb(249,139,47)" fg:x="11332" fg:w="5"/><text x="100.1971%" y="239.50"></text></g><g><title>all (11,338 samples, 100%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(244,64,35)" fg:x="0" fg:w="11338"/><text x="0.2500%" y="623.50"></text></g><g><title>rum (11,331 samples, 99.94%)</title><rect x="0.0617%" y="597" width="99.9383%" height="15" fill="rgb(216,46,15)" fg:x="7" fg:w="11331"/><text x="0.3117%" y="607.50">rum</text></g><g><title>_start (11,322 samples, 99.86%)</title><rect x="0.1411%" y="581" width="99.8589%" height="15" fill="rgb(250,74,19)" fg:x="16" fg:w="11322"/><text x="0.3911%" y="591.50">_start</text></g><g><title>__libc_start_main_impl (11,321 samples, 99.85%)</title><rect x="0.1499%" y="565" width="99.8501%" height="15" fill="rgb(249,42,33)" fg:x="17" fg:w="11321"/><text x="0.3999%" y="575.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (11,321 samples, 99.85%)</title><rect x="0.1499%" y="549" width="99.8501%" height="15" fill="rgb(242,149,17)" fg:x="17" fg:w="11321"/><text x="0.3999%" y="559.50">__libc_start_call_main</text></g><g><title>main (11,321 samples, 99.85%)</title><rect x="0.1499%" y="533" width="99.8501%" height="15" fill="rgb(244,29,21)" fg:x="17" fg:w="11321"/><text x="0.3999%" y="543.50">main</text></g><g><title>std::rt::lang_start (11,321 samples, 99.85%)</title><rect x="0.1499%" y="517" width="99.8501%" height="15" fill="rgb(220,130,37)" fg:x="17" fg:w="11321"/><text x="0.3999%" y="527.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (11,321 samples, 99.85%)</title><rect x="0.1499%" y="501" width="99.8501%" height="15" fill="rgb(211,67,2)" fg:x="17" fg:w="11321"/><text x="0.3999%" y="511.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (11,321 samples, 99.85%)</title><rect x="0.1499%" y="485" width="99.8501%" height="15" fill="rgb(235,68,52)" fg:x="17" fg:w="11321"/><text x="0.3999%" y="495.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (11,321 samples, 99.85%)</title><rect x="0.1499%" y="469" width="99.8501%" height="15" fill="rgb(246,142,3)" fg:x="17" fg:w="11321"/><text x="0.3999%" y="479.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (11,321 samples, 99.85%)</title><rect x="0.1499%" y="453" width="99.8501%" height="15" fill="rgb(241,25,7)" fg:x="17" fg:w="11321"/><text x="0.3999%" y="463.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (11,321 samples, 99.85%)</title><rect x="0.1499%" y="437" width="99.8501%" height="15" fill="rgb(242,119,39)" fg:x="17" fg:w="11321"/><text x="0.3999%" y="447.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (11,321 samples, 99.85%)</title><rect x="0.1499%" y="421" width="99.8501%" height="15" fill="rgb(241,98,45)" fg:x="17" fg:w="11321"/><text x="0.3999%" y="431.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (11,321 samples, 99.85%)</title><rect x="0.1499%" y="405" width="99.8501%" height="15" fill="rgb(254,28,30)" fg:x="17" fg:w="11321"/><text x="0.3999%" y="415.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (11,321 samples, 99.85%)</title><rect x="0.1499%" y="389" width="99.8501%" height="15" fill="rgb(241,142,54)" fg:x="17" fg:w="11321"/><text x="0.3999%" y="399.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (11,321 samples, 99.85%)</title><rect x="0.1499%" y="373" width="99.8501%" height="15" fill="rgb(222,85,15)" fg:x="17" fg:w="11321"/><text x="0.3999%" y="383.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (11,321 samples, 99.85%)</title><rect x="0.1499%" y="357" width="99.8501%" height="15" fill="rgb(210,85,47)" fg:x="17" fg:w="11321"/><text x="0.3999%" y="367.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (11,321 samples, 99.85%)</title><rect x="0.1499%" y="341" width="99.8501%" height="15" fill="rgb(224,206,25)" fg:x="17" fg:w="11321"/><text x="0.3999%" y="351.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (11,321 samples, 99.85%)</title><rect x="0.1499%" y="325" width="99.8501%" height="15" fill="rgb(243,201,19)" fg:x="17" fg:w="11321"/><text x="0.3999%" y="335.50">core::ops::function::FnOnce::call_once</text></g><g><title>rum::main (11,321 samples, 99.85%)</title><rect x="0.1499%" y="309" width="99.8501%" height="15" fill="rgb(236,59,4)" fg:x="17" fg:w="11321"/><text x="0.3999%" y="319.50">rum::main</text></g></svg></svg>